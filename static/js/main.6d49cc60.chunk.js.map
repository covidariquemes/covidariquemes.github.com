{"version":3,"sources":["pages/main/api.js","pages/main/dados.js","pages/main/graficos/uti/index.js","pages/main/graficos/enfermaria/index.js","pages/main/graficos/letalidade/index.js","pages/main/graficos/media/index.js","pages/main/graficos/tratamento/index.js","pages/main/graficos/mortes/index.js","pages/main/graficos/novosCasos/index.js","pages/main/graficos/aguardando/index.js","pages/main/graficos/curados/index.js","pages/main/index.js","components/navbar/index.js","components/footer/index.js","App.js","serviceWorker.js","index.js"],"names":["api","axios","create","baseURL","load","a","get","response","docs","data","Uti","state","dados","uti","React","createRef","this","setState","grafico","dado1","length","dado2","myChartRef","current","getContext","Chart","type","labels","datasets","backgroundColor","borderColor","borderWidth","pointRadius","options","legend","display","scales","yAxes","gridLines","ticks","xAxes","className","ref","height","Component","Enfermaria","enfermaria","label","Letalidade","letalidade","auxMortes","auxCasos","i","parseInt","mortes","novos","toFixed","Media","total","calc","novosCasos","casos","Tratamento","arrayData","arrayTratamento","tratamento","push","date","window","innerWidth","Mortes","arrayMortes","reduce","item","index","NovosCasos","arrayNovosCasos","Curados","resultado","arrayAguardando","aguardandoResultado","curados","arrayCurados","Main","Navbar","Footer","href","App","Boolean","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","console","message"],"mappings":"gaAGeA,E,OAFHC,EAAMC,OAAO,CAACC,QAAS,iDCCtBC,EAAI,uCAAG,8BAAAC,EAAA,sEACKL,EAAIM,IAAI,UADb,cACZC,EADY,OAEXC,EAAQD,EAASE,KAAjBD,KAFW,kBAGXA,GAHW,2CAAH,qDCEIE,E,4MAEnBC,MAAQ,CACNC,MAAO,I,EAWTC,IAAMC,IAAMC,Y,wLANVC,K,SAA4BZ,I,yBAAbQ,M,WAAVK,S,gBACLD,KAAKE,U,sIAOG,IACCN,EAASI,KAAKL,MAAdC,MAGHO,EAAQP,EADFA,EAAMQ,OAAO,GACAP,IACnBQ,EAAQ,IAAIF,EAEVG,EAAaN,KAAKH,IAAIU,QAAQC,WAAW,MACjC,IAAIC,IAAMH,EAAY,CACtCI,KAAM,WACNjB,KAAM,CACFkB,OAAQ,CAAC,UAAW,cACpBC,SAAU,CAAC,CACPnB,KAAM,CAACU,EAAME,GACbQ,gBAAiB,CAAC,uBAAuB,wBACzCC,YAAa,CAAC,qBAAqB,qBACnCC,YAAa,EACbC,YAAa,KAGrBC,QAAS,CACLC,OAAQ,CACNC,SAAS,GAEXC,OAAQ,CACJC,MAAO,CAAC,CACNC,WAAW,EACXC,MAAO,CACHJ,SAAS,KAGfK,MAAO,CAAC,CACNF,WAAW,EACXC,MAAO,CACDJ,SAAS,W,+BASzB,OACE,yBAAKM,UAAU,OACb,4BAAQC,IAAK1B,KAAKH,IAAK8B,OAAQ,W,GA7DNC,aCAZC,E,4MAEnBlC,MAAQ,CACNC,MAAO,I,EAUTkC,WAAahC,IAAMC,Y,wLALjBC,K,SAA4BZ,I,yBAAbQ,M,WAAVK,S,gBACLD,KAAKE,U,sIAKG,IACDN,EAASI,KAAKL,MAAdC,MAGHO,EAAQP,EADFA,EAAMQ,OAAO,GACA0B,WACnBzB,EAAQ,IAAIF,EAERG,EAAaN,KAAK8B,WAAWvB,QAAQC,WAAW,MACxC,IAAIC,IAAMH,EAAY,CACtCI,KAAM,WACNjB,KAAM,CACFkB,OAAQ,CAAC,UAAW,cACpBC,SAAU,CAAC,CACPmB,MAAO,iBACPtC,KAAM,CAACU,EAAME,GACbQ,gBAAiB,CAAC,0BAA0B,wBAC5CC,YAAa,CAAC,wBAAwB,qBACtCC,YAAa,EACbC,YAAa,KAGrBC,QAAS,CACLC,OAAQ,CACNC,SAAS,GAEXC,OAAQ,CACJC,MAAO,CAAC,CACNC,WAAW,EACXC,MAAO,CACHJ,SAAS,KAGfK,MAAO,CAAC,CACNF,WAAW,EACXC,MAAO,CACDJ,SAAS,W,+BASzB,OACE,yBAAKM,UAAU,cACb,4BAAQC,IAAK1B,KAAK8B,WAAYH,OAAQ,W,GA5DNC,aCCnBI,E,4MAEnBrC,MAAQ,CACNC,MAAO,I,EAQTqC,WAAanC,IAAMC,Y,wLAJjBC,K,SAA4BZ,I,yBAAbQ,M,WAAVK,S,gBACLD,KAAKE,U,sIAUL,IALQ,IACDN,EAASI,KAAKL,MAAdC,MAEHsC,EAAY,EACZC,EAAW,EACNC,EAAI,EAAGA,EAAIxC,EAAMQ,OAAQgC,IAChCF,GAAaG,SAASzC,EAAMwC,GAAGE,QAEjC,IAASF,EAAI,EAAGA,EAAIxC,EAAMQ,OAAQgC,IAChCD,GAAYE,SAASzC,EAAMwC,GAAGG,OAGhC,IAAIpC,EAAmB,IAAV+B,EAAeC,EAGxB9B,EAAQ,KAFZF,EAAQA,EAAMqC,QAAQ,IAIdlC,EAAaN,KAAKiC,WAAW1B,QAAQC,WAAW,MACxC,IAAIC,IAAMH,EAAY,CACtCI,KAAM,WACNjB,KAAM,CACFkB,OAAQ,CAAC,SAAU,iBACnBC,SAAU,CAAC,CACPmB,MAAO,iBACPtC,KAAM,CAACU,EAAOE,GACdQ,gBAAiB,CAAC,yBAAyB,wBAC3CC,YAAa,CAAC,uBAAuB,qBACrCC,YAAa,EACbC,YAAa,KAGrBC,QAAS,CACLC,OAAQ,CACNC,SAAS,GAEXC,OAAQ,CACJC,MAAO,CAAC,CACNC,WAAW,EACXC,MAAO,CACHJ,SAAS,KAGfK,MAAO,CAAC,CACNF,WAAW,EACXC,MAAO,CACDJ,SAAS,W,+BASzB,OACE,yBAAKM,UAAU,cACb,4BAAQC,IAAK1B,KAAKiC,WAAYN,OAAQ,W,GArENC,aCDnBa,G,kNAEnB9C,MAAQ,CACN+C,MAAO,EACP9C,MAAO,I,wLAIPI,K,SAA4BZ,I,yBAAbQ,M,WAAVK,S,gBACLD,KAAK2C,O,mIAQL,IALK,IACE/C,EAASI,KAAKL,MAAdC,MAEHgD,EAAa,EACbC,EAAQjD,EAAMQ,OACTgC,EAAIS,EAAM,EAAGT,GAAKS,EAAM,GAAIT,IACnCQ,GAAcP,SAASzC,EAAMwC,GAAGG,OAElC,IAAIG,GAASE,GAAY,IAAIJ,QAAQ,GACrCxC,KAAKC,SAAS,CAACyC,MAAOA,M,+BAGf,IACAA,EAAS1C,KAAKL,MAAd+C,MACP,OACE,yBAAKjB,UAAU,gBACb,8BAAOiB,Q,GA5BoBd,cCAdkB,E,4MAEnBnD,MAAQ,CACNC,MAAO,GACPH,KAAM,EACNoD,MAAO,EACPE,UAAW,GACXC,gBAAiB,I,EAkBnBC,WAAanD,IAAMC,Y,kMAbjBC,K,SAA4BZ,I,OAI5B,I,kBAJeQ,M,WAAVK,S,gBAED8C,EAAY,GACZC,EAAkB,GACbZ,EAAI,EAAGA,EAAIpC,KAAKL,MAAMC,MAAMQ,OAAQgC,IAC3CW,EAAUG,KAAKlD,KAAKL,MAAMC,MAAMwC,GAAGe,MACnCH,EAAgBE,KAAKlD,KAAKL,MAAMC,MAAMwC,GAAGa,YAE3CjD,KAAKC,SAAS,CAAC8C,YAAWC,oBAC1BhD,KAAKE,U,uIAMG,IAAD,EACqCF,KAAKL,MAA1CC,EADA,EACAA,MAAOmD,EADP,EACOA,UAAWC,EADlB,EACkBA,gBAEnBvD,EAAOG,EAAMA,EAAMQ,OAAO,GAAG+C,KAC7BN,EAAQjD,EAAMA,EAAMQ,OAAO,GAAG6C,WACpCjD,KAAKC,SAAS,CAACR,OAAMoD,UAErB,IAAMvC,EAAaN,KAAKiD,WAAW1C,QAAQC,WAAW,MACxC,IAAIC,IAAMH,EAAY,CACpCI,KAAM,MACNjB,KAAM,CACFkB,OAAQoC,EACRnC,SAAU,CAAC,CACPmB,MAAO,iBACPtC,KAAMuD,EACNnC,gBAAiB,yBACjBC,YAAa,uBACbC,YAAa,EACbC,YAAa,KAGrBC,QAAS,CACLC,OAAQ,CACNC,SAAS,Q,+BAMR,IAAD,EACgBnB,KAAKL,MAApBF,EADD,EACCA,KAAMoD,EADP,EACOA,MACb,OACE,6BACE,0BAAMpB,UAAU,yBAAyBhC,EAAzC,MAAiD,gCAASoD,EAAT,2BACjD,yBAAKpB,UAAU,aACb,yBAAKA,UAAU,cACb,4BAAQC,IAAK1B,KAAKiD,WAAYtB,OAAQyB,OAAOC,WAAa,IAAK,GAAK,a,GA/DxCzB,aCAnB0B,E,4MAEnB3D,MAAQ,CACNC,MAAO,GACPH,KAAM,EACN6C,OAAQ,EACRS,UAAW,GACXQ,YAAa,I,EAiBfjB,OAASxC,IAAMC,Y,kMAZbC,K,SAA4BZ,I,OAI5B,I,kBAJeQ,M,WAAVK,S,gBAED8C,EAAY,GACZQ,EAAc,GACTnB,EAAI,EAAGA,EAAIpC,KAAKL,MAAMC,MAAMQ,OAAQgC,IAC3CW,EAAUG,KAAKlD,KAAKL,MAAMC,MAAMwC,GAAGe,MACnCI,EAAYL,KAAKlD,KAAKL,MAAMC,MAAMwC,GAAGE,QAEvCtC,KAAKC,SAAS,CAAC8C,YAAWQ,gBAC1BvD,KAAKE,U,uIAIG,IAAD,EACiCF,KAAKL,MAAtCC,EADA,EACAA,MAAOmD,EADP,EACOA,UAAWQ,EADlB,EACkBA,YAkBnB9D,GAhBO8D,EAAYC,QAAO,SAASC,EAAMC,GAC7C,OAAOrB,SAASoB,GAAQpB,SAASqB,MAetB9D,EAAMA,EAAMQ,OAAO,GAAG+C,MAC7Bb,EAAS1C,EAAMA,EAAMQ,OAAO,GAAGkC,OAErCtC,KAAKC,SAAS,CAACR,OAAM6C,WAErB,IAAMhC,EAAaN,KAAKsC,OAAO/B,QAAQC,WAAW,MACpC,IAAIC,IAAMH,EAAY,CACpCI,KAAM,MACNjB,KAAM,CACFkB,OAAQoC,EACRnC,SAAU,CAAC,CACPmB,MAAO,SACPtC,KAAM8D,EACN1C,gBAAiB,wBACjBC,YAAa,uBACbC,YAAa,EACbC,YAAa,KAGrBC,QAAS,CACLC,OAAQ,CACNC,SAAS,Q,+BAMR,IAAD,EACiBnB,KAAKL,MAArBF,EADD,EACCA,KAAM6C,EADP,EACOA,OACb,OACE,6BACE,0BAAMb,UAAU,yBAAyBhC,EAAzC,MAAiD,gCAAS6C,EAAT,wBACjD,yBAAKb,UAAU,aACb,yBAAKA,UAAU,UACb,4BAAQC,IAAK1B,KAAKsC,OAAQX,OAAQyB,OAAOC,WAAa,IAAK,IAAM,a,GA9EzCzB,aCAf+B,E,4MAEnBhE,MAAQ,CACNC,MAAO,GACPH,KAAM,EACNmD,WAAY,EACZG,UAAW,GACXa,gBAAiB,I,EAkBnBrB,MAAQzC,IAAMC,Y,kMAbZC,K,SAA4BZ,I,OAI5B,I,kBAJeQ,M,WAAVK,S,gBAED8C,EAAY,GACZa,EAAkB,GACbxB,EAAI,EAAGA,EAAIpC,KAAKL,MAAMC,MAAMQ,OAAQgC,IAC3CW,EAAUG,KAAKlD,KAAKL,MAAMC,MAAMwC,GAAGe,MACnCS,EAAgBV,KAAKlD,KAAKL,MAAMC,MAAMwC,GAAGG,OAE3CvC,KAAKC,SAAS,CAAC8C,YAAWa,oBAC1B5D,KAAKE,U,uIAKG,IAAD,EACqCF,KAAKL,MAAnCoD,GADP,EACAnD,MADA,EACOmD,WAAWa,EADlB,EACkBA,gBAMnBnE,GAJMmE,EAAgBJ,QAAO,SAASC,EAAMC,GAChD,OAAOrB,SAASoB,GAAQpB,SAASqB,MAGtBX,EAAUA,EAAU3C,OAAO,IAClCwC,EAAagB,EAAgBA,EAAgBxD,OAAO,GAE1DJ,KAAKC,SAAS,CAACR,OAAMmD,eAErB,IAAMtC,EAAaN,KAAKuC,MAAMhC,QAAQC,WAAW,MACnC,IAAIC,IAAMH,EAAY,CACpCI,KAAM,MACNjB,KAAM,CACFkB,OAAQoC,EACRnC,SAAU,CAAC,CACPmB,MAAO,cACPtC,KAAMmE,EACN/C,gBAAiB,wBACjBC,YAAa,uBACbC,YAAa,EACbC,YAAa,KAGrBC,QAAS,CACLC,OAAQ,CACNC,SAAS,Q,+BAMR,IAAD,EACqBnB,KAAKL,MAAzBF,EADD,EACCA,KAAMmD,EADP,EACOA,WACb,OACE,6BACE,0BAAMnB,UAAU,yBAAyBhC,EAAzC,MAAiD,gCAASmD,EAAT,6BACjD,yBAAKnB,UAAU,aACb,yBAAKA,UAAU,SACb,4BAAQC,IAAK1B,KAAKuC,MAAOZ,OAAQyB,OAAOC,WAAa,IAAK,IAAM,a,GAnEpCzB,aCAnBiC,E,4MAEnBlE,MAAQ,CACNC,MAAO,GACPH,KAAM,EACNqE,UAAW,EACXf,UAAW,GACXgB,gBAAiB,I,EAgBnBC,oBAAsBlE,IAAMC,Y,kMAZ1BC,K,SAA4BZ,I,OAI5B,I,kBAJeQ,M,WAAVK,S,gBAED8C,EAAY,GACZgB,EAAkB,GACb3B,EAAI,EAAGA,EAAIpC,KAAKL,MAAMC,MAAMQ,OAAQgC,IAC3CW,EAAUG,KAAKlD,KAAKL,MAAMC,MAAMwC,GAAGe,MACnCY,EAAgBb,KAAKlD,KAAKL,MAAMC,MAAMwC,GAAG0B,WAE3C9D,KAAKC,SAAS,CAAC8C,YAAWgB,oBAC1B/D,KAAKE,U,uIAKG,IAAD,EACqCF,KAAKL,MAAnCoD,GADP,EACAnD,MADA,EACOmD,WAAWgB,EADlB,EACkBA,gBAEnBtE,EAAOsD,EAAUA,EAAU3C,OAAO,GAClC0D,EAAYC,EAAgBA,EAAgB3D,OAAO,GAEzDJ,KAAKC,SAAS,CAACR,OAAMqE,cAErB,IAAMxD,EAAaN,KAAKgE,oBAAoBzD,QAAQC,WAAW,MACjD,IAAIC,IAAMH,EAAY,CACpCI,KAAM,MACNjB,KAAM,CACFkB,OAAQoC,EACRnC,SAAU,CAAC,CACPmB,MAAO,wBACPtC,KAAMsE,EACNlD,gBAAiB,wBACjBC,YAAa,uBACbC,YAAa,EACbC,YAAa,KAGrBC,QAAS,CACLC,OAAQ,CACNC,SAAS,Q,+BAMR,IAAD,EACoBnB,KAAKL,MAAxBF,EADD,EACCA,KAAMqE,EADP,EACOA,UACb,OACE,6BACE,0BAAMrC,UAAU,yBAAyBhC,EAAzC,MAAiD,gCAASqE,EAAT,sCACjD,yBAAKrC,UAAU,aACb,yBAAKA,UAAU,uBACb,4BAAQC,IAAK1B,KAAKgE,oBAAqBrC,OAAQyB,OAAOC,WAAa,IAAK,IAAM,a,GA9DrDzB,aCAhB0B,E,4MAEnB3D,MAAQ,CACNC,MAAO,GACPH,KAAM,EACNwE,QAAS,EACTlB,UAAW,GACXmB,aAAc,I,EAkBhBD,QAAUnE,IAAMC,Y,kMAbdC,K,SAA4BZ,I,OAI5B,I,kBAJeQ,M,WAAVK,S,gBAED8C,EAAY,GACZmB,EAAe,GACV9B,EAAI,EAAGA,EAAIpC,KAAKL,MAAMC,MAAMQ,OAAQgC,IAC3CW,EAAUG,KAAKlD,KAAKL,MAAMC,MAAMwC,GAAGe,MACnCe,EAAahB,KAAKlD,KAAKL,MAAMC,MAAMwC,GAAG6B,SAExCjE,KAAKC,SAAS,CAAC8C,YAAWmB,iBAC1BlE,KAAKE,U,uIAKG,IAAD,EACkCF,KAAKL,MAAhCoD,GADP,EACAnD,MADA,EACOmD,WAAWmB,EADlB,EACkBA,aAEnBzE,EAAOsD,EAAUA,EAAU3C,OAAO,GAClC6D,EAAUC,EAAaA,EAAa9D,OAAO,GAEjDJ,KAAKC,SAAS,CAACR,OAAMwE,YAErB,IAAM3D,EAAaN,KAAKiE,QAAQ1D,QAAQC,WAAW,MACrC,IAAIC,IAAMH,EAAY,CACpCI,KAAM,MACNjB,KAAM,CACFkB,OAAQoC,EACRnC,SAAU,CAAC,CACPmB,MAAO,UACPtC,KAAMyE,EACNrD,gBAAiB,uBACjBC,YAAa,sBACbC,YAAa,EACbC,YAAa,KAGrBC,QAAS,CACLC,OAAQ,CACNC,SAAS,Q,+BAMR,IAAD,EACkBnB,KAAKL,MAAtBF,EADD,EACCA,KAAMwE,EADP,EACOA,QACb,OACE,6BACE,0BAAMxC,UAAU,yBAAyBhC,EAAzC,MAAiD,gCAASwE,EAAT,qBACjD,yBAAKxC,UAAU,aACb,yBAAKA,UAAU,WACb,4BAAQC,IAAK1B,KAAKiE,QAAStC,OAAQyB,OAAOC,WAAa,IAAK,GAAK,a,GA/DzCzB,aCSfuC,E,uKAIjB,OACE,yBAAK1C,UAAU,mBAEf,yBAAKA,UAAU,OACX,yBAAKA,UAAU,2BACb,0BAAMA,UAAU,0BAAhB,sBACA,yBAAKA,UAAU,aACb,kBAAC,EAAD,QAGJ,yBAAKA,UAAU,2BACb,0BAAMA,UAAU,0BAAhB,6BACA,yBAAKA,UAAU,aACb,kBAAC,EAAD,QAGJ,yBAAKA,UAAU,2BACb,0BAAMA,UAAU,0BAAhB,cACA,yBAAKA,UAAU,aACb,kBAAC,EAAD,QAGJ,yBAAKA,UAAU,2BACb,0BAAMA,UAAU,qBAAhB,mBACA,0BAAMA,UAAU,gCAAhB,wCACA,yBAAKA,UAAU,aACb,kBAAC,EAAD,SAKR,yBAAKA,UAAU,OACX,yBAAKA,UAAU,uBACb,0BAAMA,UAAU,cAAhB,iBACA,kBAAC,EAAD,QAIJ,yBAAKA,UAAU,YACb,yBAAKA,UAAU,0BACb,0BAAMA,UAAU,cAAhB,UACA,kBAAC,EAAD,OAGF,yBAAKA,UAAU,0BACb,0BAAMA,UAAU,cAAhB,eACA,kBAAC,EAAD,OAGF,yBAAKA,UAAU,0BACb,0BAAMA,UAAU,cAAhB,wBACA,kBAAC,EAAD,QAIJ,yBAAKA,UAAU,YACX,yBAAKA,UAAU,uBACb,0BAAMA,UAAU,cAAhB,WACA,kBAAC,EAAD,a,GA9DoBG,aCVbwC,G,6KAEjB,OACE,6BACE,sD,GAJ4BxC,cCDfyC,G,6KAEjB,OACE,6BACA,4BAAQ5C,UAAU,8BAChB,yBAAKA,UAAU,aACb,yBAAKA,UAAU,OACb,yBAAKA,UAAU,eACb,wBAAIA,UAAU,cAAd,QACA,uBAAGA,UAAU,4BAAb,6MAEF,yBAAKA,UAAU,8BACb,wBAAIA,UAAU,cAAd,WACA,wBAAIA,UAAU,eACZ,4BAAI,uBAAGA,UAAU,gBAAgB6C,KAAK,+DAA8D,uBAAG7C,UAAU,iBAA7G,gBAKZ,yBAAKA,UAAU,oBACb,yBAAKA,UAAU,aAAf,oCAEE,uBAAGA,UAAU,sBAAsB6C,KAAK,MAAxC,6B,GAtBwB1C,cCcrB2C,MAVf,WACE,OACE,yBAAK9C,UAAU,OACb,kBAAC,EAAD,MACA,kBAAC,EAAD,MACA,kBAAC,EAAD,QCCc+C,QACW,cAA7BpB,OAAOqB,SAASC,UAEe,UAA7BtB,OAAOqB,SAASC,UAEhBtB,OAAOqB,SAASC,SAASC,MACvB,2D,YCVNC,IAASC,OACP,kBAAC,IAAMC,WAAP,KACE,kBAAC,EAAD,OAEFC,SAASC,eAAe,SDuHpB,kBAAmBC,WACrBA,UAAUC,cAAcC,MACrBC,MAAK,SAAAC,GACJA,EAAaC,gBAEdC,OAAM,SAAAC,GACLC,QAAQD,MAAMA,EAAME,c","file":"static/js/main.6d49cc60.chunk.js","sourcesContent":["import axios from 'axios';\nconst api = axios.create({baseURL: 'https://covidariquemes-com-br.umbler.net/api'});\n\nexport default api;\n","import api from './api';\n\nexport const load = async() => {\n  const response = await api.get('/covid');\n  const {docs} = response.data;\n  return(docs);\n}\n","import React, {Component} from 'react';\nimport Chart from \"chart.js\";\nimport {load} from '../../dados.js';\n\nexport default class Uti extends Component{\n\n  state = {\n    dados: {}\n  }\n\n  async componentDidMount(){\n    //console.log(await load());\n    this.setState({dados: await load()})\n    this.grafico();\n    //console.log(this.state.uti);\n  }\n\n\n  uti = React.createRef();\n\n  grafico(){\n      const {dados} = this.state;\n\n      let aux = dados.length-1\n      let dado1 = dados[aux].uti;\n      let dado2 = 100-dado1;\n\n      const myChartRef = this.uti.current.getContext(\"2d\");\n      var myChart = new Chart(myChartRef, {\n    type: 'doughnut',\n    data: {\n        labels: ['ocupado', 'desocupado'],\n        datasets: [{\n            data: [dado1,dado2],\n            backgroundColor: ['rgba(255, 0, 0, 0.5)','rgba(0, 255, 255, 0)'],\n            borderColor: ['rgba(255, 0, 0, 1)','rgba(0, 0, 0, .3)'],\n            borderWidth: 3,\n            pointRadius: 0\n        }]\n    },\n    options: {\n        legend: {\n          display: false\n        },\n        scales: {\n            yAxes: [{\n              gridLines: false,\n              ticks: {\n                  display: false //this will remove only the label\n              }\n            }],\n            xAxes: [{\n              gridLines: false,\n              ticks: {\n                    display: false //this will remove only the label\n                }\n            }]\n        }\n    }\n});\n  }\n\n  render(){\n    return(\n      <div className=\"uti\">\n        <canvas ref={this.uti} height={150}/>\n      </div>\n    )\n  }\n}\n","import React, {Component} from 'react';\nimport Chart from \"chart.js\";\nimport {load} from '../../dados.js';\n\nexport default class Enfermaria extends Component{\n\n  state = {\n    dados: {}\n  }\n\n  async componentDidMount(){\n    //console.log(await load());\n    this.setState({dados: await load()})\n    this.grafico();\n    //console.log(this.state.uti);\n  }\n\n  enfermaria = React.createRef();\n  grafico(){\n    const {dados} = this.state;\n\n    let aux = dados.length-1\n    let dado1 = dados[aux].enfermaria;\n    let dado2 = 100-dado1;\n\n      const myChartRef = this.enfermaria.current.getContext(\"2d\");\n      var myChart = new Chart(myChartRef, {\n    type: 'doughnut',\n    data: {\n        labels: ['ocupado', 'desocupado'],\n        datasets: [{\n            label: 'em tratamento ',\n            data: [dado1,dado2],\n            backgroundColor: ['rgba(255, 235, 59, 0.5)','rgba(0, 255, 255, 0)'],\n            borderColor: ['rgba(255, 235, 59, 1)','rgba(0, 0, 0, .3)'],\n            borderWidth: 3,\n            pointRadius: 0\n        }]\n    },\n    options: {\n        legend: {\n          display: false\n        },\n        scales: {\n            yAxes: [{\n              gridLines: false,\n              ticks: {\n                  display: false //this will remove only the label\n              }\n            }],\n            xAxes: [{\n              gridLines: false,\n              ticks: {\n                    display: false //this will remove only the label\n                }\n            }]\n        }\n    }\n});\n  }\n\n  render(){\n    return(\n      <div className=\"enfermaria\">\n        <canvas ref={this.enfermaria} height={150}/>\n      </div>\n    )\n  }\n}\n","import React, {Component} from 'react';\nimport Chart from \"chart.js\";\nimport {load} from '../../dados.js';\n\n\nexport default class Letalidade extends Component{\n\n  state = {\n    dados: {}\n  }\n\n  async componentDidMount(){\n    this.setState({dados: await load()})\n    this.grafico();\n  }\n\n  letalidade = React.createRef();\n\n  grafico(){\n    const {dados} = this.state;\n\n    let auxMortes = 0\n    let auxCasos = 4\n    for (var i = 0; i < dados.length; i++) {\n      auxMortes += parseInt(dados[i].mortes)\n    }\n    for (var i = 0; i < dados.length; i++) {\n      auxCasos += parseInt(dados[i].novos)\n    }\n\n    let dado1 = (auxMortes*100)/auxCasos\n    dado1 = dado1.toFixed(2);\n\n    let dado2 = 100-dado1;\n\n      const myChartRef = this.letalidade.current.getContext(\"2d\");\n      var myChart = new Chart(myChartRef, {\n    type: 'doughnut',\n    data: {\n        labels: ['mortes', 'sobrevivencia'],\n        datasets: [{\n            label: 'em tratamento ',\n            data: [dado1, dado2],\n            backgroundColor: ['rgba(255, 87, 34, 0.5)','rgba(0, 255, 255, 0)'],\n            borderColor: ['rgba(255, 87, 34, 1)','rgba(0, 0, 0, .3)'],\n            borderWidth: 3,\n            pointRadius: 0\n        }]\n    },\n    options: {\n        legend: {\n          display: false\n        },\n        scales: {\n            yAxes: [{\n              gridLines: false,\n              ticks: {\n                  display: false //this will remove only the label\n              }\n            }],\n            xAxes: [{\n              gridLines: false,\n              ticks: {\n                    display: false //this will remove only the label\n                }\n            }]\n        }\n    }\n});\n  }\n\n  render(){\n    return(\n      <div className=\"letalidade\">\n        <canvas ref={this.letalidade} height={150}/>\n      </div>\n    )\n  }\n}\n","import React, {Component} from 'react';\nimport './style.css';\nimport {load} from '../../dados.js';\n\nexport default class Media extends Component{\n\n  state = {\n    total: 0,\n    dados: {}\n  }\n\n  async componentDidMount(){\n    this.setState({dados: await load()})\n    this.calc();\n  }\n\n  calc(){\n    const {dados} = this.state;\n\n    let novosCasos = 0;\n    let casos = dados.length;\n    for (var i = casos-1; i >= casos-30; i--) {\n      novosCasos += parseInt(dados[i].novos);\n    }\n    let total = (novosCasos/=30).toFixed(0);\n    this.setState({total: total})\n  }\n\n  render(){\n    const {total} = this.state;\n    return(\n      <div className=\"media center\">\n        <span>{total}</span>\n      </div>\n    )\n  }\n}\n","import React, {Component} from 'react';\nimport Chart from \"chart.js\";\nimport {load} from '../../dados.js';\n\nexport default class Tratamento extends Component{\n\n  state = {\n    dados: {},\n    data: 0,\n    casos: 0,\n    arrayData: [],\n    arrayTratamento: []\n  }\n\n\n  async componentDidMount(){\n    this.setState({dados: await load()})\n\n    let arrayData = []\n    let arrayTratamento = []\n    for (var i = 0; i < this.state.dados.length; i++) {\n      arrayData.push(this.state.dados[i].date)\n      arrayTratamento.push(this.state.dados[i].tratamento)\n    }\n    this.setState({arrayData, arrayTratamento})\n    this.grafico();\n  }\n\n\n  tratamento = React.createRef();\n\n  grafico(){\n    const {dados, arrayData, arrayTratamento} = this.state;\n\n    const data = dados[dados.length-1].date;\n    const casos = dados[dados.length-1].tratamento;\n    this.setState({data, casos});\n\n    const myChartRef = this.tratamento.current.getContext(\"2d\");\n    var myChart = new Chart(myChartRef, {\n    type: 'bar',\n    data: {\n        labels: arrayData,\n        datasets: [{\n            label: 'em tratamento ',\n            data: arrayTratamento,\n            backgroundColor: 'rgba(156, 39, 176, .5)',\n            borderColor: 'rgba(100, 0, 100, 1)',\n            borderWidth: 1,\n            pointRadius: 2\n        }]\n    },\n    options: {\n        legend: {\n          display: false\n        }\n    }\n});\n  }\n\n  render(){\n    const {data, casos} = this.state;\n    return(\n      <div>\n        <span className=\"card-description mb-5\">{data} - <strong>{casos} pessoas em tratamento</strong></span>\n        <div className=\"card-body\">\n          <div className=\"tratamento\">\n            <canvas ref={this.tratamento} height={window.innerWidth > 725? 80 : 150}/>\n          </div>\n        </div>\n      </div>\n    )\n  }\n}\n","import React, {Component} from 'react';\nimport Chart from \"chart.js\";\nimport {load} from '../../dados.js';\n\nexport default class Mortes extends Component{\n\n  state = {\n    dados: {},\n    data: 0,\n    mortes: 0,\n    arrayData: [],\n    arrayMortes: []\n  }\n\n\n  async componentDidMount(){\n    this.setState({dados: await load()})\n\n    let arrayData = []\n    let arrayMortes = []\n    for (var i = 0; i < this.state.dados.length; i++) {\n      arrayData.push(this.state.dados[i].date)\n      arrayMortes.push(this.state.dados[i].mortes)\n    }\n    this.setState({arrayData, arrayMortes})\n    this.grafico();\n  }\n\n  mortes = React.createRef();\n  grafico(){\n    const {dados, arrayData, arrayMortes} = this.state;\n\n    let a274d6 = arrayMortes.reduce(function(item, index){\n      return parseInt(item) + parseInt(index)\n    })\n\n    /**/\n    /*let pessoasMortasDia = 0;\n    let pessoasMortas = Dados()[0].mortes\n    let datas = Dados()[0].data\n\n    for (var i = 0; i < datas.length; i++) {\n      pessoasMortasDia += pessoasMortas[i]\n      console.log(`|  ${datas[i]} |  ${pessoasMortas[i]}  | ${pessoasMortasDia}`);\n    }\n\n    /**/\n\n    const data = dados[dados.length-1].date;\n    const mortes = dados[dados.length-1].mortes;\n\n    this.setState({data, mortes});\n\n    const myChartRef = this.mortes.current.getContext(\"2d\");\n    var myChart = new Chart(myChartRef, {\n    type: 'bar',\n    data: {\n        labels: arrayData,\n        datasets: [{\n            label: 'Mortes',\n            data: arrayMortes,\n            backgroundColor: 'rgba(156, 39, 39, .5)',\n            borderColor: 'rgba(156, 39, 39, 1)',\n            borderWidth: 3,\n            pointRadius: 0\n        }]\n    },\n    options: {\n        legend: {\n          display: false\n        }\n    }\n});\n  }\n\n  render(){\n    const {data, mortes} = this.state;\n    return(\n      <div>\n        <span className=\"card-description mb-5\">{data} - <strong>{mortes} mortes registradas</strong></span>\n        <div className=\"card-body\">\n          <div className=\"mortes\">\n            <canvas ref={this.mortes} height={window.innerWidth > 725? 120 : 150}/>\n          </div>\n        </div>\n      </div>\n    )\n  }\n}\n","import React, {Component} from 'react';\nimport Chart from \"chart.js\";\nimport {load} from '../../dados.js';\n\nexport default class NovosCasos extends Component{\n\n  state = {\n    dados: {},\n    data: 0,\n    novosCasos: 0,\n    arrayData: [],\n    arrayNovosCasos: []\n  }\n\n\n  async componentDidMount(){\n    this.setState({dados: await load()})\n\n    let arrayData = []\n    let arrayNovosCasos = []\n    for (var i = 0; i < this.state.dados.length; i++) {\n      arrayData.push(this.state.dados[i].date)\n      arrayNovosCasos.push(this.state.dados[i].novos)\n    }\n    this.setState({arrayData, arrayNovosCasos})\n    this.grafico();\n  }\n\n\n  novos = React.createRef();\n  grafico(){\n    const {dados, arrayData, arrayNovosCasos} = this.state;\n\n    let novos = arrayNovosCasos.reduce(function(item, index){\n      return parseInt(item) + parseInt(index)\n    })\n\n    const data = arrayData[arrayData.length-1];\n    const novosCasos = arrayNovosCasos[arrayNovosCasos.length-1];\n\n    this.setState({data, novosCasos});\n\n    const myChartRef = this.novos.current.getContext(\"2d\");\n    var myChart = new Chart(myChartRef, {\n    type: 'bar',\n    data: {\n        labels: arrayData,\n        datasets: [{\n            label: 'Novos Casos',\n            data: arrayNovosCasos,\n            backgroundColor: 'rgba(156, 39, 39, .5)',\n            borderColor: 'rgba(156, 39, 39, 1)',\n            borderWidth: 3,\n            pointRadius: 0\n        }]\n    },\n    options: {\n        legend: {\n          display: false\n        }\n    }\n});\n  }\n\n  render(){\n    const {data, novosCasos} = this.state;\n    return(\n      <div>\n        <span className=\"card-description mb-5\">{data} - <strong>{novosCasos} novos casos registrados</strong></span>\n        <div className=\"card-body\">\n          <div className=\"novos\">\n            <canvas ref={this.novos} height={window.innerWidth > 725? 120 : 150}/>\n          </div>\n        </div>\n      </div>\n    )\n  }\n}\n","import React, {Component} from 'react';\nimport Chart from \"chart.js\";\nimport {load} from '../../dados.js';\n\nexport default class Curados extends Component{\n\n  state = {\n    dados: {},\n    data: 0,\n    resultado: 0,\n    arrayData: [],\n    arrayAguardando: []\n  }\n\n  async componentDidMount(){\n    this.setState({dados: await load()})\n\n    let arrayData = []\n    let arrayAguardando = []\n    for (var i = 0; i < this.state.dados.length; i++) {\n      arrayData.push(this.state.dados[i].date)\n      arrayAguardando.push(this.state.dados[i].resultado)\n    }\n    this.setState({arrayData, arrayAguardando})\n    this.grafico();\n  }\n\n  aguardandoResultado = React.createRef();\n\n  grafico(){\n    const {dados, arrayData, arrayAguardando} = this.state;\n\n    const data = arrayData[arrayData.length-1];\n    const resultado = arrayAguardando[arrayAguardando.length-1];\n\n    this.setState({data, resultado});\n\n    const myChartRef = this.aguardandoResultado.current.getContext(\"2d\");\n    var myChart = new Chart(myChartRef, {\n    type: 'bar',\n    data: {\n        labels: arrayData,\n        datasets: [{\n            label: 'Aguardando Resultados',\n            data: arrayAguardando,\n            backgroundColor: 'rgba(156, 39, 39, .5)',\n            borderColor: 'rgba(156, 39, 39, 1)',\n            borderWidth: 3,\n            pointRadius: 0\n        }]\n    },\n    options: {\n        legend: {\n          display: false\n        }\n    }\n});\n  }\n\n  render(){\n    const {data, resultado} = this.state;\n    return(\n      <div>\n        <span className=\"card-description mb-5\">{data} - <strong>{resultado} pessoas aguardando os resultados</strong></span>\n        <div className=\"card-body\">\n          <div className=\"aguardandoResultado\">\n            <canvas ref={this.aguardandoResultado} height={window.innerWidth > 725? 120 : 150}/>\n          </div>\n        </div>\n      </div>\n    )\n  }\n}\n","import React, {Component} from 'react';\nimport Chart from \"chart.js\";\nimport {load} from '../../dados.js';\n\nexport default class Mortes extends Component{\n\n  state = {\n    dados: {},\n    data: 0,\n    curados: 0,\n    arrayData: [],\n    arrayCurados: []\n  }\n\n\n  async componentDidMount(){\n    this.setState({dados: await load()})\n\n    let arrayData = []\n    let arrayCurados = []\n    for (var i = 0; i < this.state.dados.length; i++) {\n      arrayData.push(this.state.dados[i].date)\n      arrayCurados.push(this.state.dados[i].curados)\n    }\n    this.setState({arrayData, arrayCurados})\n    this.grafico();\n  }\n\n\n  curados = React.createRef();\n  grafico(){\n    const {dados, arrayData, arrayCurados} = this.state;\n\n    const data = arrayData[arrayData.length-1];\n    const curados = arrayCurados[arrayCurados.length-1];\n\n    this.setState({data, curados});\n\n    const myChartRef = this.curados.current.getContext(\"2d\");\n    var myChart = new Chart(myChartRef, {\n    type: 'bar',\n    data: {\n        labels: arrayData,\n        datasets: [{\n            label: 'Curados',\n            data: arrayCurados,\n            backgroundColor: 'rgba(3, 138, 32, .5)',\n            borderColor: 'rgba(3, 138, 32, 1)',\n            borderWidth: 3,\n            pointRadius: 0\n        }]\n    },\n    options: {\n        legend: {\n          display: false\n        }\n    }\n});\n  }\n\n  render(){\n    const {data, curados} = this.state;\n    return(\n      <div>\n        <span className=\"card-description mb-5\">{data} - <strong>{curados} pessoas curadas</strong></span>\n        <div className=\"card-body\">\n          <div className=\"curados\">\n            <canvas ref={this.curados} height={window.innerWidth > 725? 80 : 150}/>\n          </div>\n        </div>\n      </div>\n    )\n  }\n}\n","import React, {Component} from 'react';\nimport './style.css';\n\nimport Uti from './graficos/uti';\nimport Enfermaria from './graficos/enfermaria';\nimport Letalidade from './graficos/letalidade';\nimport Media from './graficos/media';\nimport Tratamento from './graficos/tratamento';\nimport Mortes from './graficos/mortes';\nimport NovosCasos from './graficos/novosCasos';\nimport Aguardando from './graficos/aguardando';\nimport Curados from './graficos/curados';\n\nexport default class Main extends Component{\n\n\n  render(){\n    return(\n      <div className=\"container-fluid\">\n\n      <div className=\"row\">\n          <div className=\"mb-5 three columns card\">\n            <span className=\"card-title center mb-5\">Ocupação UTI</span>\n            <div className=\"card-body\">\n              <Uti />\n            </div>\n          </div>\n          <div className=\"mb-5 three columns card\">\n            <span className=\"card-title center mb-5\">Ocupação Enfermaria</span>\n            <div className=\"card-body\">\n              <Enfermaria />\n            </div>\n          </div>\n          <div className=\"mb-5 three columns card\">\n            <span className=\"card-title center mb-5\">Letalidade</span>\n            <div className=\"card-body\">\n              <Letalidade />\n            </div>\n          </div>\n          <div className=\"mb-5 three columns card\">\n            <span className=\"card-title center\">Média Diaria</span>\n            <span className=\"card-description center mb-4\">ultimos 30 dias de novos infectados </span>\n            <div className=\"card-body\">\n              <Media />\n            </div>\n          </div>\n      </div>\n\n      <div className=\"row\">\n          <div className=\"twelve columns card\">\n            <span className=\"card-title\">Em Tratamento</span>\n            <Tratamento />\n          </div>\n        </div>\n\n        <div className=\"row mt-5\">\n          <div className=\"mb-5 four columns card\">\n            <span className=\"card-title\">Mortes</span>\n            <Mortes />\n          </div>\n\n          <div className=\"mb-5 four columns card\">\n            <span className=\"card-title\">Novos Casos</span>\n            <NovosCasos />\n          </div>\n\n          <div className=\"mb-5 four columns card\">\n            <span className=\"card-title\">Aguardando Resultado</span>\n            <Aguardando />\n          </div>\n        </div>\n\n        <div className=\"row mb-5\">\n            <div className=\"twelve columns card\">\n              <span className=\"card-title\">Curados</span>\n              <Curados />\n            </div>\n        </div>\n\n      </div>\n    )\n  }\n}\n","import React, {Component} from 'react';\nimport './style.css';\n\nexport default class Navbar extends Component{\n  render(){\n    return(\n      <nav>\n        <span>Covid Ariquemes</span>\n      </nav>\n    )\n  }\n}\n","import React, {Component} from 'react';\nimport './style.css'\nexport default class Footer extends Component{\n  render(){\n    return(\n      <div>\n      <footer className=\"page-footer teal lighten-2\">\n        <div className=\"container\">\n          <div className=\"row\">\n            <div className=\"columns six\">\n              <h5 className=\"white-text\">Nota</h5>\n              <p className=\"grey-text text-lighten-4\">Alguns dados apresentados aqui podem não refletir a realidade pois no inicio da pandemia não havia dados detalhados como se tem atualmente e por isso alguns dados do inicio não aparecem aqui.</p>\n            </div>\n            <div className=\"columns four offset-by-two\">\n              <h5 className=\"white-text\">Projeto</h5>\n              <ul className=\"footer-list\">\n                <li><a className=\"no-decoration\" href=\"https://github.com/covidariquemes/covidariquemes.github.com\"><i className=\"fa fa-github\"></i> Github</a></li>\n              </ul>\n            </div>\n          </div>\n        </div>\n        <div className=\"footer-copyright\">\n          <div className=\"container\">\n            2007 - GNU GENERAL PUBLIC LICENSE\n            <a className=\"right no-decoration\" href=\"#!\"> Lucas Carinhanha</a>\n          </div>\n        </div>\n      </footer>\n    </div>\n    )\n  }\n}\n","import React from 'react';\n\nimport Main from './pages/main';\nimport Navbar from './components/navbar';\nimport Footer from './components/footer';\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <Navbar />\n      <Main />\n      <Footer />\n    </div>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nimport './css/normalize.css';\nimport './css/skeleton.css';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}